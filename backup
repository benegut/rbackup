#!/bin/bash


cmd=`basename $0`


if [[ "$cmd" = "pull" ]]; then
    mode='PULL'
elif [[ "$cmd" = "push" ]]; then
    mode='PUSH'
elif [[ "$cmd" = "backup" ]]; then
    mode='SCRIPT'
else
    echo "Unknown mode detected. Probably a wrong soft link. Abort"
    exit 71
fi


show_help()
{
    cat <<EOF
usage: $cmd
EOF
}


DELETE="--delete"
POSITIONAL_ARGS=()

while [[ "$#" -gt 0 ]]; do
    case "$1" in
        '-m'|'--merge')
            DELETE=""
            shift
            ;;
        '-h'|'-?'|'--help')
            show_help
            exit
            ;;
        *)
            POSITIONAL_ARGS+=("$1") # save positional arg
            shift
            ;;
    esac
done

set -- "${POSITIONAL_ARGS[@]}" # restore positional parameters

rsyncargs=("${POSITIONAL_ARGS[@]:1}")

if [[ "${1}" =~ ^- ]] || [[ ${#} -eq 0 ]]; then
    echo "Must provide name of backup."
    exit 1
fi

name=$1
shift


system_config='/etc/backup.conf'
user_config="$HOME/.config/backup/backup.conf"

declare -a arr=0

load_config ()
{
    sed '/^\s*#/d;/^$/d' $1 | while read line; do
        tmp=($line)
        if [[ $name = ${tmp[0]} ]]; then
            echo "$line"
            break
        fi
    done
}

if [[ -e ${user_config} ]]; then
    arr=$(load_config ${user_config})
elif [[ -e ${system_config} ]]; then
    arr=$(load_config ${system_config})
else
    echo "No config found. Abort."
    exit 70
fi

data=($arr)
localdir=${data[1]%/}
remoteurl=${data[2]}
remotedir=${data[3]%/}

echo "${localdir}"
echo ${remoteurl}
echo ${remotedir}
echo "${remotedir}/$(basename ${localdir})"
echo "${rsyncargs[@]}"


if [[ "${mode}" = "PULL" ]]; then
    rsync -aAXuv $DELETE ${rsyncargs[@]} "${remoteurl}:${remotedir}/$(basename ${localdir})/" "${localdir}"
elif [[ "${mode}" = "PUSH" ]]; then
    rsync -aAXuv $DELETE ${rsyncargs[@]} "${localdir}" "${remoteurl}:${remotedir}"
elif [[ "${mode}" = "SCRIPT" ]]; then
    echo "Script mode. Exiting"
else
    echo "Unknown mode. Exiting"
fi

exit 0
